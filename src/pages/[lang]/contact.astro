---
import { links } from '../../data/links';
import Layout from '../../layouts/BaseLayout.astro';
import { t } from '../../utils/t';

const { lang } = Astro.params;
const supportedLangs = ['en', 'de', 'ar'];

// Generate static paths
export async function getStaticPaths() {
  return supportedLangs.map(lang => ({ params: { lang } }));
}

// Fallback if route is invalid
if (!supportedLangs.includes(lang)) {
  throw new Error(`Invalid language: ${lang}`);
}

// Types (optional but safe)
type LinksType = {
  email: string;
  whatsapp: string;
  instagram: string;
};

const contactLinks = links as LinksType;
---

<Layout title="Contact – MHG Ingolstadt e. V." lang={lang}>
  <section class="max-w-6xl mx-auto px-4 py-12">
    <h2 class="text-3xl sm:text-4xl font-bold mb-10 text-center">👋 {t("contact.title", lang)}</h2>

    <!-- Info Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-10">
      <div class="bg-white rounded-xl shadow-md p-6">
        <h3 class="text-xl font-semibold mb-3">📚 {t("contact.studentsTitle", lang)}</h3>
        <p class="mb-2">{t("contact.studentsDescription", lang)}</p>
        <ul class="space-y-1 text-sm">
          <li>
            {t("contact.title", lang)}:
            <a href={`mailto:${contactLinks.email}`} class="text-[#0369a1] underline" target="_blank">
              {contactLinks.email}
            </a>
          </li>
          <li>
            {t("social.whatsapp", lang)}:
            <a href={contactLinks.whatsapp} class="text-[#0369a1] underline" target="_blank">
              {t("contact.whatsappJoin", lang)}
            </a>
          </li>
          <li>
            {t("social.instagram", lang)}:
            <a href={contactLinks.instagram} class="text-[#0369a1] underline" target="_blank">
              @mhg_ingolstadt
            </a>
          </li>
        </ul>
      </div>

      <div class="bg-white rounded-xl shadow-md p-6">
        <h3 class="text-xl font-semibold mb-3">🕌 {t("contact.guestsTitle", lang)}</h3>
        <p>{t("contact.guestsDescription", lang)}</p>
      </div>
    </div>

    <!-- Contact Form -->
    <div class="bg-white rounded-xl shadow-md p-6">
      <h3 class="text-xl font-semibold mb-6">📧 {t("contact.formTitle", lang)}</h3>
      <form
        action="https://formspree.io/f/mnnvjege"
        method="POST"
        class="space-y-4"
        id="contactForm"
      >
        <div>
          <label for="name" class="block text-sm font-medium mb-1">{t("contact.formName", lang)}</label>
          <input type="text" id="name" name="name" required
            class="w-full border border-gray-300 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-[#0369a1]" />
        </div>

        <div>
          <label for="email" class="block text-sm font-medium mb-1">{t("contact.email", lang)}</label>
          <input type="email" id="email" name="email" required
            class="w-full border border-gray-300 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-[#0369a1]" />
        </div>

        <div>
          <label for="message" class="block text-sm font-medium mb-1">{t("contact.formMessage", lang)}</label>
          <textarea id="message" name="message" rows="4" required
            class="w-full border border-gray-300 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-[#0369a1]"></textarea>
        </div>

        <button type="submit"
          class="w-full bg-[#0369a1] text-white py-2 rounded-full hover:bg-blue-800 transition">
          {t("contact.formSubmitBTN", lang)}
        </button>
      </form>
    </div>
  </section>

  <script is:inline>
    const form = document.getElementById('contactForm');

    form.addEventListener('submit', async function (e) {
      e.preventDefault();
      const formData = new FormData(form);
      const response = await fetch(form.action, {
        method: form.method,
        body: formData,
        headers: { Accept: 'application/json' }
      });

      // Clear previous messages
      document.querySelectorAll('[data-feedback]').forEach(el => el.remove());

      const msg = document.createElement('div');
      msg.setAttribute('data-feedback', '');
      msg.className = 'mt-4 p-3 rounded-md text-sm';

      if (response.ok) {
        msg.classList.add('bg-green-100', 'text-green-800', 'border', 'border-green-300');
        msg.textContent = `✅ Thank you! Message sent.`;
        form.reset();
      } else {
        msg.classList.add('bg-red-100', 'text-red-800', 'border', 'border-red-300');
        msg.textContent = `❌ Something went wrong. Please try again.`;
      }

      form.insertAdjacentElement('afterend', msg);

      setTimeout(() => {
        msg.remove();
      }, 5000);
    });
  </script>
</Layout>
