---
import Layout from '../../layouts/BaseLayout.astro';
import { events } from '../../data/events.js';

// Get slug from route
const { slug } = Astro.params;

// Find the corresponding event
const event = events.find(event => event.slug === slug);

if (!event) {
  throw new Error(`No event found for slug: ${slug}`);
}

// Define static paths
export async function getStaticPaths() {
  return events.map(event => ({
    params: { slug: event.slug }
  }));
}
---

<Layout title={`Register ‚Äì ${event.title}`}>
  <section class="max-w-2xl mx-auto px-4 py-12">
    <a
    href={`/events/${event.slug}`}
    class="text-sm text-[#0369a1] hover:underline block mb-6"
    >
    ‚Üê Back to {event.title}
    </a>
    <h1 class="text-3xl font-bold mb-6">üìù Register for {event.title}</h1>

    <form
    id="eventForm"
    class="space-y-4 bg-white p-6 rounded-xl shadow"
    >
    <input type="hidden" name="event" value={event.slug} />

    <div>
        <label for="name" class="block text-sm font-medium mb-1">Name</label>
        <input
        type="text"
        id="name"
        name="name"
        required
        class="w-full border border-gray-300 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-[#0369a1]"
        />
    </div>

    <div>
        <label for="email" class="block text-sm font-medium mb-1">Email</label>
        <input
        type="email"
        id="email"
        name="email"
        required
        class="w-full border border-gray-300 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-[#0369a1]"
        />
    </div>

    <div>
        <p class="block text-sm font-medium mb-1">Will you be coming alone or with someone?</p>
        <div class="flex flex-col sm:flex-row sm:space-x-4 space-y-2 sm:space-y-0">
        <label class="flex items-center space-x-2">
            <input type="radio" name="companionship" value="Alone" required />
            <span>Alone</span>
        </label>
        <label class="flex items-center space-x-2">
            <input type="radio" name="companionship" value="With someone" required />
            <span>With someone</span>
        </label>
        </div>
    </div>

    <div>
        <p class="block text-sm font-medium mb-1">Gender</p>
        <div class="flex flex-col sm:flex-row sm:space-x-4 space-y-2 sm:space-y-0">
        <label class="flex items-center space-x-2">
            <input type="radio" name="gender" value="Male" required />
            <span>Male</span>
        </label>
        <label class="flex items-center space-x-2">
            <input type="radio" name="gender" value="Female" required />
            <span>Female</span>
        </label>
        <label class="flex items-center space-x-2">
            <input type="radio" name="gender" value="Prefer not to say" required />
            <span>Prefer not to say</span>
        </label>
        </div>
    </div>

    <button
        type="submit"
        class="w-full bg-[#0369a1] text-white py-2 rounded-full hover:bg-blue-800 transition"
    >
        Submit Registration
    </button>

    <div id="formFeedback" class="mt-4 text-sm hidden"></div>
    </form>
  </section>

  <script is:inline>
    const form = document.getElementById('eventForm');
    const feedback = document.getElementById('formFeedback');
  
    form.addEventListener('submit', async function (e) {
      e.preventDefault();
      const formData = new FormData(form);
  
      const response = await fetch("https://formspree.io/f/xblydnqb", {
        method: "POST",
        body: formData,
        headers: { Accept: "application/json" }
      });
  
      if (response.ok) {
        feedback.textContent = "‚úÖ Thank you! Redirecting...";
        feedback.className = "mt-4 p-3 rounded-md text-green-800 bg-green-100 border border-green-300 text-sm";
        feedback.classList.remove("hidden");
        form.reset();
  
        // ‚úÖ Redirect after 1 second
        setTimeout(() => {
          window.location.href = "/thank-you";
        }, 1000);
      } else {
        feedback.textContent = "‚ùå Something went wrong. Please try again.";
        feedback.className = "mt-4 p-3 rounded-md text-red-800 bg-red-100 border border-red-300 text-sm";
        feedback.classList.remove("hidden");
      }
    });
  </script>
  
   
</Layout>
